@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Presentation.Mvc.Controllers
@using Presentation.Mvc.Hubs
@using Presentation.Mvc.Utils
@model ImageUploadModel

<div class="text-center">
    <h1 class="display-4">Welcome</h1>

    @using (Html.BeginForm(nameof(HomeController.UploadImage), typeof(HomeController).GetControllerName(),
                FormMethod.Post, new { enctype = "multipart/form-data", id = "imageUploadForm" }))
    {
        <div>
            <label for="file">Select an image to upload:</label>
            <input type="file" id="file" name="ImageData" asp-for="ImageData" accept="image/*" required/>
        </div>
        <button type="submit" class="btn btn-primary mt-2">Upload Image</button>
    }

    <div id="alertContainer">
    </div>
</div>


<div id="uploadedContent" style="display: none;">
    <div>
        <div class="image-preview-container">
            <img id="imagePreview" src="" alt="preview will appear here"/>
            <div id="imageContainerFooter">
                <p id="imageName"></p>
            </div>
        </div>
    </div>

    <div id="contentPreview">
        <div id="spinnerContainer" class="d-flex h-100 w-100 align-items-center justify-content-center">
            <div id="loadingSpinner" class="spinner-border" role="status">
            </div>
        </div>

        <div id="content">
            <p id="DetectedText"></p>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/8.0.7/signalr.min.js" integrity="sha512-7SRCYIJtR6F8ocwW7UxW6wGKqbSyqREDbfCORCbGLatU0iugBLwyOXpzhkPyHIFdBO0K2VCu57fvP2Twgx1o2A==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script>
        function showAlert(message, type) {
            const alertContainer = $("#alertContainer"); 
            alertContainer.empty();

            const alertClass = `alert-${type}`; // Bootstrap alert type (e.g., alert-success, alert-danger)
            const alertHtml = `
        <div class="alert ${alertClass} alert-dismissible fade show" role="alert">
            ${message}
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>`;

            alertContainer.append(alertHtml);
        }
        
        $(document).ready(() => {
            const connection = new signalR.HubConnectionBuilder()
                .withUrl("/imageUploadHub")
                .build();


            connection.on("@ImageUploadHub.RecieveImageDataEvent", (messageType) => {
                showAlert("The text was successfully extracted from the image.", "success");
                $('#spinnerContainer').hide();
                $('#DetectedText').text(messageType.text);
            });

            let signalRConnectionId;
            
            connection.start().catch(function (err) {
                return console.error(err.toString());
            }).then(() => {
                connection.invoke("@nameof(ImageUploadHub.GetConnectionId)")
                    .then(connectionId => {
                        console.log("SignalR Connection ID:", connectionId);
                        signalRConnectionId = connectionId;
                    })
                    .catch(err => console.error("Error getting connection ID:", err));
            });
            
            const onSuccess = (response) => {
                showAlert("Image uploaded successfully!", "success");
                $('#spinnerContainer').show()
                $('#imagePreview').attr('src', response.imageUrl);
                $('#imageName').text(response.imageName);
                $('#uploadedContent').show();
                $('#imageUploadForm').hide();
            }

            $('#imageUploadForm').submit(function (e) {
                e.preventDefault();

                const formData = new FormData(this);

                $.ajax({
                    url: this.action, // URL from Html.BeginForm
                    type: this.method, // Method from Html.BeginForm (POST)
                    data: formData,
                    processData: false, // Important for FormData
                    contentType: false, // Important for FormData
                    headers: {
                        "X-SignalR-Connection-Id": signalRConnectionId
                    },
                    beforeSend: function() {
                        $('#uploadedContent').hide(); // Hide previous content
                        $('#alertContainer').empty(); // Clear any existing alerts
                    },
                    success: function (response) {
                        console.log("Upload successful:", response);
                        onSuccess(response);
                    },
                    error: function (xhr, status, error) {
                        console.error("Upload error:", xhr.responseText);
                    },
                });
            });
        });
    </script>
}